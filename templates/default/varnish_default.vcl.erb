################### backends ###################

backend sysopia {
  .host = "<%= @params["sysopia_ip"] %>";
  .port = "<%= @params["sysopia_port"] %>";
  .probe = {
    .url = "/favicon.ico";
    .interval = 5s;
    .timeout = 1s;
    .window = 5;
    .threshold = 3;
  }
}

backend gnparser {
  .host = "<%= @params["gnparser_ip"] %>";
  .port = "<%= @params["gnparser_port"] %>";
}

backend gni {
  .host = "<%= @params["gni_ip"] %>";
  .port = "<%= @params["gni_port"] %>";
  .probe = {
    .url = "/favicon.ico";
    .interval = 5s;
    .timeout = 1s;
    .window = 5;
    .threshold = 3;
  }
}

backend gnrd {
  .host = "<%= @params["gnrd_ip"] %>";
  .port = "<%= @params["gnrd_port"] %>";
}

backend gnresolver {
  .host = "<%= @params["gnresolver_ip"] %>";
  .port = "<%= @params["gnresolver_port"] %>";
}

backend gnresolver_api {
  .host = "<%= @params["gnresolver_api_ip"] %>";
  .port = "<%= @params["gnresolver_api_port"] %>";
}

backend resolver_bhl {
  .host = "<%= @params["resolver_bhl_ip"] %>";
  .port = "<%= @params["resolver_bhl_port"] %>";
  .probe = {
    .url = "/favicon.ico";
    .interval = 5s;
    .timeout = 1s;
    .window = 5;
    .threshold = 3;
  }
}

backend sensu {
  .host = "<%= @params["sensu_ip"] %>";
  .port = "<%= @params["sensu_port"] %>";
}


### Resolver ####
<%- @params["resolvers"].each do |res| %>
backend <%= res["name"] %> {
  .host= "<%= res["ip"] %>";
  .port = "<%= res["port"] %>";
  .first_byte_timeout = 120s;
  .probe = { .url = "/"; .interval = 5s;
    .timeout = 3s; .window = 5; .threshold = 3; }
}
<%- end %>

##################### ACL ######################

# Specific IP addresses that we have found to abuse our policies:

acl unwanted {
  "68.1.1.1";
}

acl local {
 "172.22.247.18";
}

################## directors ###################

# These are our public resolution servers:
<%- groups = @params["resolvers"].group_by { |res| res["director"] } %>
<%- groups.each do |group_name, group| %>
director <%= group_name %> random {
  .retries = 5;
  <%- group.each do |res| %>
  { .backend = <%= res["name"] %>; .weight = 5; }
  <%- end %>
}
<%- end %>

sub vcl_recv {
  if (req.http.Accept-Encoding) {
    if (req.url ~ "\.(jpg|png|gif|gz|tgz|bz2|tbz|mp3|ogg)$") {
# No point in compressing these
      remove req.http.Accept-Encoding;
    } else if (req.http.Accept-Encoding ~ "gzip") {
      set req.http.Accept-Encoding = "gzip";
    } else if (req.http.Accept-Encoding ~ "deflate") {
      set req.http.Accept-Encoding = "deflate";
    } else {
# unknown algorithm
      remove req.http.Accept-Encoding;
    }
  } if (client.ip ~ unwanted) {
    error 410;
  } elseif (req.http.host ~ "^<%= @params["sysopia_host"] %>$") {
    set req.backend = sysopia;
  } elseif (req.http.host ~ "^<%= @params["gni_host"] %>$") {
    set req.backend = gni;
  } elseif (req.http.host ~ "^<%= @params["gnparser_host"] %>$") {
    set req.backend = gnparser;
  } elseif (req.http.host ~ "^<%= @params["gnrd_host"] %>$") {
    set req.backend = gnrd;
  } elseif (req.http.host ~ "^<%= @params["gnresolver_host"] %>$") {
    if (req.url ~ "^/api") {
      set req.backend = gnresolver_api;
    } else {
      set req.backend = gnresolver;
    }
  } elseif (req.http.host ~ "^<%= @params["sensu_host"] %>$") {
    set req.backend = sensu;
  } elseif (req.http.host ~ "^<%= @params["resolver_host"] %>$") {
    if (client.ip ~ local) {
      set req.backend = resolver_bhl;
    } else {
      set req.backend = resolver;
    }
  } else {
    #set req.backend = appfarm;
    error 404;
  }
}
